pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    ECR_REGISTRY = 'your-account-id.dkr.ecr.${AWS_REGION}.amazonaws.com'
    IMAGE_NAME = 'myapp'
    REPO_NAME = 'myapp-repo'
    CREDENTIALS_ID = 'aws-credentials' // Jenkins credentials for AWS CLI
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/yourusername/your-repo.git', branch: 'main'
      }
    }

    stage('SonarQube Analysis') {
      environment {
        scannerHome = tool 'SonarQubeScanner' 
      }
      steps {
        withSonarQubeEnv('SonarQubeServer') {
          sh """
            ${scannerHome}/bin/sonar-scanner \
            -Dsonar.projectKey=myapp \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://your-sonarqube-url:9000 \
            -Dsonar.login=your-sonarqube-token
          """
        }
      }
    }

    stage('Docker Build') {
      steps {
        sh """
          docker build -t ${IMAGE_NAME}:latest .
        """
      }
    }

    stage('Authenticate to ECR') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: CREDENTIALS_ID]]) {
          sh """
            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
          """
        }
      }
    }

    stage('Push Docker Image') {
      steps {
        sh """
          docker tag ${IMAGE_NAME}:latest ${ECR_REGISTRY}/${REPO_NAME}:latest
          docker push ${ECR_REGISTRY}/${REPO_NAME}:latest
        """
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
